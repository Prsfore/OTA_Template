
#include <ESPAsyncWebServer.h>
#include <ElegantOTA.h>
#include <Credentials.h>  // Wi-Fi credentials

#if defined(ESP32)
  #include <Arduino.h>
  #include <WiFi.h>
  #include <HTTPClient.h>
  #include <freertos/FreeRTOS.h>
  #include <freertos/task.h>
  #include <freertos/timers.h>
  #include "FS.h"
  #include <LittleFS.h>
  #include <WiFi.h>
  #include <AsyncTCP.h>

  AsyncWebServer server(80);
#endif

void onOTAStart() {
  Serial.println("OTA update started!");
}

unsigned long ota_progress_millis = 0;
void onOTAProgress(size_t current, size_t final) {
  if (millis() - ota_progress_millis > 1000) {
    ota_progress_millis = millis();
    Serial.printf("OTA Progress Current: %u bytes, Final: %u bytes\n", current, final);
  }
}

void onOTAEnd(bool success) {
  if (success) {
    Serial.println("OTA update finished successfully!");
  } else {
    Serial.println("There was an error during OTA update!");
  }
}

void initOTA(){
  ElegantOTA.begin(&server);  
  ElegantOTA.onStart(onOTAStart);
  ElegantOTA.onProgress(onOTAProgress);
  ElegantOTA.onEnd(onOTAEnd);                                          
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
    request->send(200, "text/plain", "Hi! This is ElegantOTA .");
  });
  server.begin();
  Serial.println("HTTP server started");
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setup() {
  initOTA();

}

void loop() {
  ElegantOTA.loop();

}
